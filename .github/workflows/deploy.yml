name: Terraform Deployment

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
        
      - name: Terraform Init
        run: terraform init
      
      - name: Terraform Validate
        run: terraform validate

      - name: Import EC2 Instance (if it exists)
        run: |
          INSTANCE_ID="i-0f8bada45cf01c35c"
          if aws ec2 describe-instances --instance-ids $INSTANCE_ID --query "Reservations[0].Instances[0].InstanceId" --output text; then
            echo "EC2 instance already exists. Importing into Terraform State"
            terraform import aws_instance.hello_world $INSTANCE_ID
          else
            echo "Creating new EC2 instance"
          fi

      - name: Terraform Import Security Group (if exists)
        run: |
          if aws ec2 describe-security-groups --group-names "web_access" --query "SecurityGroups[0].GroupId" --output text; then
            echo "Security group already exists. Importing into Terraform State"
            terraform import aws_security_group.web_access $(aws ec2 describe-security-groups --group-names "web_access" --query "SecurityGroups[0].GroupId" --output text)
          else
            echo "Creating new security group"
          fi
      
      - name: Terraform Plan
        id: plan
        run: terraform plan
      
      - name: Terraform Apply
        run: terraform apply -auto-approve
      
      - name: Terraform State
        run: terraform show


